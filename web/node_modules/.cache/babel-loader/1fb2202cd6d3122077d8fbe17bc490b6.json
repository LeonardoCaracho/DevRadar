{"ast":null,"code":"import _slicedToArray from \"D:\\\\PROJECTS\\\\sos10\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\sos10\\\\web\\\\src\\\\components\\\\DevForm\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction DevForm({\n  onSubmit\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        latitude = _useState2[0],\n        setLatitude = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        longitude = _useState4[0],\n        setLongitude = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        github_username = _useState6[0],\n        setGithubUsername = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        techs = _useState8[0],\n        setTechs = _useState8[1];\n\n  useEffect(() => {\n    //roda apenas quando carrega a pagina, porque [] está vazio\n    navigator.geolocation.getCurrentPosition(position => {\n      const _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n      setLatitude(latitude);\n      setLongitude(longitude);\n    }, err => {\n      console.log(err);\n    }, {\n      timeout: 30000\n    });\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await onSubmit({\n      github_username,\n      techs,\n      latitude,\n      longitude\n    });\n    setGithubUsername('');\n    setTechs('');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Github's username \"), React.createElement(\"input\", {\n    name: \"github_username\",\n    id: \"github_username\",\n    required: true,\n    value: github_username,\n    onChange: e => setGithubUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"techs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Technologies \"), React.createElement(\"input\", {\n    name: \"techs\",\n    id: \"techs\",\n    required: true,\n    value: techs,\n    onChange: e => setTechs(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"latitude\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" Latitude \"), React.createElement(\"input\", {\n    name: \"latitude\",\n    id: \"latitude\",\n    required: true,\n    value: latitude,\n    onChange: e => setLatitude(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"longitude\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" Longitude \"), React.createElement(\"input\", {\n    name: \"longitude\",\n    id: \"longitude\",\n    required: true,\n    value: longitude,\n    onChange: e => setLatitude(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" Salvar \"));\n}\n\nexport default DevForm;","map":{"version":3,"sources":["D:/PROJECTS/sos10/web/src/components/DevForm/index.js"],"names":["React","useEffect","useState","DevForm","onSubmit","latitude","setLatitude","longitude","setLongitude","github_username","setGithubUsername","techs","setTechs","navigator","geolocation","getCurrentPosition","position","coords","err","console","log","timeout","handleSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction DevForm({ onSubmit }) {\r\n    const [latitude, setLatitude] = useState('')\r\n    const [longitude, setLongitude] = useState('')\r\n    const [github_username, setGithubUsername] = useState('')\r\n    const [techs, setTechs] = useState('')\r\n\r\n    useEffect(() => { //roda apenas quando carrega a pagina, porque [] está vazio\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const { latitude, longitude } = position.coords\r\n    \r\n            setLatitude(latitude)\r\n            setLongitude(longitude)\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n          },\r\n          {\r\n            timeout: 30000\r\n          }\r\n        )\r\n      }, []) \r\n\r\n      async function handleSubmit(e){\r\n        e.preventDefault();\r\n        await onSubmit({\r\n            github_username,\r\n            techs,\r\n            latitude, \r\n            longitude\r\n        })\r\n\r\n        setGithubUsername('')\r\n        setTechs('')\r\n      }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>  \r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"\"> Github's username </label>\r\n            <input\r\n              name=\"github_username\" \r\n              id=\"github_username\" \r\n              required\r\n              value={ github_username }\r\n              onChange={e => setGithubUsername(e.target.value)}>  \r\n            </input>\r\n          </div>\r\n\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"techs\"> Technologies </label>\r\n            <input\r\n              name=\"techs\" \r\n              id=\"techs\" \r\n              required\r\n              value={ techs }\r\n              onChange={e => setTechs(e.target.value)}>\r\n            </input>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"latitude\"> Latitude </label>\r\n              <input\r\n                name=\"latitude\" \r\n                id=\"latitude\" \r\n                required \r\n                value={ latitude }\r\n                onChange={e => setLatitude(e.target.value)}>\r\n              </input>\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"longitude\"> Longitude </label>\r\n              <input \r\n                name=\"longitude\" \r\n                id=\"longitude\" \r\n                required value={ longitude }\r\n                onChange={e => setLatitude(e.target.value)}>\r\n              </input>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\"> Salvar </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DevForm"]},"metadata":{},"sourceType":"module"}